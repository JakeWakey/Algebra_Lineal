#include <iostream>
#include <vector>

using namespace std;

void make_upper_triangular(vector<vector<double> >& matrix) {
    int rows = matrix.size();
    int cols = matrix[0].size() - 1;  // Excluimos la última columna

    for (int i = 0; i < rows - 1; ++i) {
        for (int k = i + 1; k < rows; ++k) {
            double factor = -matrix[k][i] / matrix[i][i];
            cout << "Operaciones para hacer la fila " << k + 1 << " cero en la columna " << i + 1 << ":" << endl;
            for (int j = i; j < cols; ++j) {
                cout << "   Fila " << k + 1 << "[" << j + 1 << "] = Fila " << k + 1 << "[" << j + 1 << "] + ("
                     << factor << ") * Fila " << i + 1 << "[" << j + 1 << "]" << endl;
                matrix[k][j] += factor * matrix[i][j];
            }
            cout << endl;
        }
    }
}

int main() {
    int rows, cols;
    cout << "Ingrese el número de filas: ";
    cin >> rows;
    cout << "Ingrese el número de columnas (incluyendo la columna ampliada): ";
    cin >> cols;

    vector<vector<double> > matrix(rows, vector<double>(cols));

    cout << "Ingrese los elementos de la matriz aumentada por fila:" << endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cin >> matrix[i][j];
        }
    }

    cout << "Matriz aumentada original:" << endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << matrix[i][j] << "\t";
        }
        cout << endl;
    }

    make_upper_triangular(matrix);

    cout << "Matriz aumentada triangular superior resultante:" << endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << matrix[i][j] << "\t";
        }
        cout << endl;
    }

    return 0;
}

